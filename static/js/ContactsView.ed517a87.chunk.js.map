{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Form/Form.js","redux/operations.js","redux/selectors.js","components/Contacts/Contacts.js","components/Filter/Filter.js","views/ContactsView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","Form","dispatch","useDispatch","useState","name","setName","number","setNumber","handleChangeName","useCallback","event","target","handleChangeNumber","handleSubmit","preventDefault","alert","contact","addContactRequest","axios","post","then","data","addContactSuccess","catch","error","addContactError","message","addContact","type","onSubmit","className","onChange","pattern","title","required","getLoading","state","contacts","loading","getFilter","filter","getVisibleContacts","items","getAllContacts","normalizedFilter","toLowerCase","includes","Contacts","useSelector","onDelete","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","deleteContact","map","onClick","Filter","changeFilter","ContactsView","isLoadingContacts","useEffect","fetchContactRequest","get","fetchContactSuccess","fetchContactError"],"mappings":"yMAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,wKIqEvFC,MArEf,WACE,IAAMC,EAAWC,cACjB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAmBC,uBACvB,SAAAC,GAAK,OAAIL,EAAQK,EAAMC,OAAOhB,SAC9B,IAEIiB,EAAqBH,uBACzB,SAAAC,GAAK,OAAIH,EAAUG,EAAMC,OAAOhB,SAChC,IAGIkB,EAAeJ,uBACnB,SAAAC,GAGE,GAFAA,EAAMI,iBAEO,KAATV,GAA0B,KAAXE,EACjB,OAAOS,MAAM,+OAGfd,ECLa,SAACG,EAAME,GAAP,OAAkB,SAAAL,GACnC,IAAMe,EAAU,CAAEZ,OAAME,UAExBL,EAASgB,eAETC,IACGC,KAAK,YAAaH,GAClBI,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcpB,EAASqB,YAAkBD,OAC9CE,OAAM,SAAAC,GAAK,OAAIvB,EAASwB,YAAgBD,EAAME,cDHpCC,CAAWvB,EAAME,IAE1BD,EAAQ,IACRE,EAAU,MAEZ,CAACN,EAAUG,EAAME,IAGnB,OACE,uBAAMsB,KAAK,SAASC,SAAUhB,EAAciB,UAAU,OAAtD,UACE,wBAAOA,UAAU,QAAjB,+BAEE,uBACEA,UAAU,QACVnC,MAAOS,EACP2B,SAAUvB,EACVoB,KAAK,OACLxB,KAAK,OACL4B,QAAQ,yHACRC,MAAM,kcAENC,UAAQ,OAIZ,wBAAOJ,UAAU,QAAjB,2CAEE,uBACEA,UAAU,QACVnC,MAAOW,EACPyB,SAAUnB,EACVgB,KAAK,MACLxB,KAAK,SACL4B,QAAQ,yFACRC,MAAM,6iBAENC,UAAQ,OAIZ,wBAAQN,KAAK,SAASE,UAAU,SAAhC,kEEnEAK,G,MAAa,SAAAC,GAAK,OAAIA,EAAMC,SAASC,UAIrCC,EAAY,SAAAH,GAAK,OAAIA,EAAMC,SAASG,QAEpCC,EAAqB,SAAAL,GACzB,IAAMC,EALe,SAAAD,GAAK,OAAIA,EAAMC,SAASK,MAK5BC,CAAeP,GAE1BQ,EADSL,EAAUH,GACOS,cAEhC,OAAOR,EAASG,QAAO,gBAAGpC,EAAH,EAAGA,KAAH,MACrB,UAAGA,GAAOyC,cAAcC,SAASF,OCsBtBG,MA5Bf,WACE,IAAMV,EAAWW,YAAYP,GAEvBxC,EAAWC,cACX+C,EAAW,SAAAC,GAAE,OAAIjD,EFuBH,SAAAiD,GAAE,OAAI,SAAAjD,GAC1BA,EAASkD,YAAqBD,IAE9BhC,IACGkC,OADH,oBACuBF,IACpB9B,MAAK,kBAAMnB,EAASoD,YAAqBH,OACzC3B,OAAM,SAAAC,GAAK,OAAIvB,EAASqD,YAAmB9B,EAAME,cE7BpB6B,CAAcL,KAE9C,OACE,yBAASpB,UAAU,WAAnB,SACE,oBAAIA,UAAU,eAAd,SACGO,EAASmB,KAAI,gBAAGN,EAAH,EAAGA,GAAI9C,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACZ,qBAAIwB,UAAU,OAAd,UACE,uBAAMA,UAAU,OAAhB,UAAwB1B,EAAxB,OACA,sBAAM0B,UAAU,SAAhB,SAA0BxB,IAC1B,wBACEwB,UAAU,eACVF,KAAK,SACL6B,QAAS,kBAAMR,EAASC,IACxBA,GAAIA,EAJN,0DAHwBA,W,MCWrBQ,MArBf,WACE,IAAMlB,EAASQ,YAAYT,GACrBtC,EAAWC,cAIjB,OACE,gCACE,mBAAG4B,UAAU,YAAb,wFAEA,uBACEA,UAAU,cACVnC,MAAO6C,EACPT,SATe,SAAArB,GAAK,OAAIT,EAAS0D,YAAajD,EAAMC,OAAOhB,SAU3DiC,KAAK,OACLxB,KAAK,eCSEwD,UAtBf,WACE,IAAM3D,EAAWC,cACX2D,EAAoBb,YAAYb,GAMtC,OAJA2B,qBAAU,WACR7D,GJAwB,SAAAA,GAC1BA,EAAS8D,eAET7C,IACG8C,IAAI,aACJ5C,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcpB,EAASgE,YAAoB5C,OAChDE,OAAM,SAAAC,GAAK,OAAIvB,EAASiE,YAAkB1C,EAAME,kBILhD,CAACzB,IAGF,qCACE,oBAAI6B,UAAU,QAAd,yGACA,cAAC,EAAD,IAEA,oBAAIA,UAAU,QAAd,mDACA,cAAC,EAAD,IAEC+B,GAAqB,4CACtB,cAAC,EAAD","file":"static/js/ContactsView.ed517a87.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addContact } from '../../redux/operations';\r\nimport './Form.css';\r\n\r\nfunction Form() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChangeName = useCallback(\r\n    event => setName(event.target.value),\r\n    [],\r\n  );\r\n  const handleChangeNumber = useCallback(\r\n    event => setNumber(event.target.value),\r\n    [],\r\n  );\r\n\r\n  const handleSubmit = useCallback(\r\n    event => {\r\n      event.preventDefault();\r\n\r\n      if (name === '' && number === '') {\r\n        return alert('Нет имени или номера для сохранения контакта!');\r\n      }\r\n\r\n      dispatch(addContact(name, number));\r\n\r\n      setName('');\r\n      setNumber('');\r\n    },\r\n    [dispatch, name, number],\r\n  );\r\n\r\n  return (\r\n    <form type=\"submit\" onSubmit={handleSubmit} className=\"Form\">\r\n      <label className=\"Label\">\r\n        Имя\r\n        <input\r\n          className=\"Input\"\r\n          value={name}\r\n          onChange={handleChangeName}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          // placeholder=\"Polina\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <label className=\"Label\">\r\n        Номер\r\n        <input\r\n          className=\"Input\"\r\n          value={number}\r\n          onChange={handleChangeNumber}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          // placeholder=\"000-00-00\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\" className=\"Button\">\r\n        Добавить\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from './actions';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n    .catch(error => dispatch(fetchContactError(error.message)));\r\n};\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n  const contact = { name, number };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error.message)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest(id));\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error.message)));\r\n};\r\n\r\n//асинхронный вариант\r\n// const fetchContacts = () => async dispatch => {\r\n//   dispatch(fetchContactRequest());\r\n\r\n//   try {\r\n//     const { data } = await axios.get(\r\n//       '/contacts',\r\n//     );\r\n\r\n//     dispatch(fetchContactSuccess(data));\r\n//   } catch (error) {\r\n//     dispatch(fetchContactError(error.message));\r\n//   }\r\n// };\r\n\r\n// const addContact = (name, number) => async dispatch => {\r\n//   const contact = {\r\n//     name,\r\n//     number,\r\n//   };\r\n\r\n//   dispatch(addContactRequest());\r\n//   try {\r\n//     const { data } = await axios.post(\r\n//       '/contacts',\r\n//       contact,\r\n//     );\r\n//     dispatch(addContactSuccess(data));\r\n//   } catch (error) {\r\n//     dispatch(addContactError(error.message));\r\n//   }\r\n// };\r\n\r\n// const deleteContact = id => async dispatch => {\r\n//   dispatch(deleteContactRequest(id));\r\n//   try {\r\n//     await axios.delete(\r\n//       `/contacts/${id}`,\r\n//     );\r\n//     dispatch(deleteContactSuccess(id));\r\n//   } catch (error) {\r\n//     dispatch(deleteContactError(error.message));\r\n//   }\r\n// };\r\n\r\nexport { addContact, deleteContact, fetchContacts };\r\n","const getLoading = state => state.contacts.loading;\r\n\r\nconst getAllContacts = state => state.contacts.items;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getVisibleContacts = state => {\r\n  const contacts = getAllContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(({ name }) =>\r\n    `${name}`.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nexport { getLoading, getFilter, getVisibleContacts };\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../../redux/operations';\r\nimport './Contacts.css';\r\nimport { getVisibleContacts } from '../../redux/selectors';\r\n\r\nfunction Contacts() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n\r\n  const dispatch = useDispatch();\r\n  const onDelete = id => dispatch(deleteContact(id));\r\n\r\n  return (\r\n    <section className=\"Contacts\">\r\n      <ul className=\"ContactsList\">\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li className=\"Item\" key={id}>\r\n            <span className=\"Name\">{name}:</span>\r\n            <span className=\"Number\">{number}</span>\r\n            <button\r\n              className=\"ButtonDelete\"\r\n              type=\"submit\"\r\n              onClick={() => onDelete(id)}\r\n              id={id}\r\n            >\r\n              Удалить\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeFilter } from '../../redux/actions';\r\nimport './Filter.css';\r\nimport { getFilter } from '../../redux/selectors';\r\n\r\nfunction Filter() {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = event => dispatch(changeFilter(event.target.value));\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"FindTitle\">Поиск по имени</p>\r\n\r\n      <input\r\n        className=\"InputFilter\"\r\n        value={filter}\r\n        onChange={handleChange}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Form from '../components/Form';\r\nimport Contacts from '../components/Contacts';\r\nimport Filter from '../components/Filter';\r\nimport { fetchContacts } from '../redux/operations';\r\nimport { getLoading } from '../redux/selectors';\r\n\r\nfunction ContactsView() {\r\n  const dispatch = useDispatch();\r\n  const isLoadingContacts = useSelector(getLoading);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"Title\">Добавить контакт</h2>\r\n      <Form></Form>\r\n\r\n      <h2 className=\"Title\">Список </h2>\r\n      <Filter></Filter>\r\n\r\n      {isLoadingContacts && <h1>Loading...</h1>}\r\n      <Contacts></Contacts>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactsView;\r\n"],"sourceRoot":""}