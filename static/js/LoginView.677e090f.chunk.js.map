{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/LoginView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","LoginView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","className","type","onSubmit","event","preventDefault","logIn","name","onChange","target","placeholder","required","autoComplete"],"mappings":"yMAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,gFI2DvFC,UA5Df,WACE,IAAMC,EAAWC,cACjB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAkBA,OACE,qCACE,oBAAIC,UAAU,QAAd,mGAEA,uBAAMC,KAAK,SAASC,SAZH,SAAAC,GACnBA,EAAMC,iBAENX,EAASY,YAAM,CAAET,QAAOE,cACxBD,EAAS,IACTE,EAAY,KAOkCC,UAAU,OAAtD,UACE,wBAAOA,UAAU,QAAjB,2CAEE,uBACEA,UAAU,QACVC,KAAK,QACLK,KAAK,QACLnB,MAAOS,EACPW,SA5BgB,SAAAJ,GACxBN,EAASM,EAAMK,OAAOrB,QA4BdsB,YAAY,gBACZC,UAAQ,OAIZ,wBAAOV,UAAU,QAAjB,iDAEE,uBACEA,UAAU,QACVC,KAAK,WACLK,KAAK,WACLnB,MAAOW,EACPS,SArCmB,SAAAJ,GAC3BJ,EAAYI,EAAMK,OAAOrB,QAqCjBwB,aAAa,MACbD,UAAQ,OAIZ,wBAAQT,KAAK,SAASD,UAAU,SAAhC","file":"static/js/LoginView.677e090f.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logIn } from '../redux/auth/auth-operations';\r\n\r\nfunction LoginView() {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleChangeEmail = event => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const handleChangePassword = event => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    dispatch(logIn({ email, password }));\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"Title\">Страница логина</h1>\r\n\r\n      <form type=\"submit\" onSubmit={handleSubmit} className=\"Form\">\r\n        <label className=\"Label\">\r\n          Почта\r\n          <input\r\n            className=\"Input\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChangeEmail}\r\n            placeholder=\"Name@mail.com\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label className=\"Label\">\r\n          Пароль\r\n          <input\r\n            className=\"Input\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChangePassword}\r\n            autoComplete=\"off\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className=\"Button\">\r\n          Войти\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginView;\r\n"],"sourceRoot":""}