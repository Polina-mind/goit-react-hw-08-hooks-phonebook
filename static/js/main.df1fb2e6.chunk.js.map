{"version":3,"sources":["redux/actions.js","redux/auth/auth-operations.js","redux/auth/auth-actions.js","redux/reducer.js","redux/auth/auth-reducer.js","redux/store.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.js","components/AuthNav/AuthNav.js","components/UserNav/UserNav.js","components/AppBar/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","index.js"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","registerRequest","post","response","data","registerSuccess","alert","message","registerError","logIn","loginRequest","loginSuccess","loginError","logOut","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","items","createReducer","state","payload","filter","id","loading","_","error","combineReducers","initialUserState","name","email","user","isAuthenticated","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","next","action","authPersistConfig","key","storage","whitelist","configureStore","reducer","persistReducer","authReducer","contacts","devTools","process","persistor","persistStore","getIsAuthenticated","getUserName","Navigation","useSelector","className","exact","to","activeClassName","AuthNav","UserNav","useDispatch","onLogout","useCallback","type","onClick","AppBar","PrivateRoute","Component","component","redirectTo","routeProps","render","props","PublicRoute","children","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","NotFoundView","App","useEffect","fallback","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df1fb2e6.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nconst fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nconst fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nconst addContactRequest = createAction('contacts/addContactRequest');\r\nconst addContactSuccess = createAction('contacts/addContactSuccess');\r\nconst addContactError = createAction('contacts/addContactError');\r\n\r\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nconst deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nconst changeFilter = createAction('contacts/ChangeFilter');\r\n\r\nexport {\r\n  changeFilter,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(registerSuccess(response.data));\r\n  } catch (error) {\r\n    alert(error.message);\r\n    dispatch(registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n\r\n  dispatch(getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport { register, logIn, logOut, getCurrentUser };\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from './actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (state, { payload }) => payload,\r\n\r\n  [addContactSuccess]: (state, { payload }) => {\r\n    return [...state, payload];\r\n  },\r\n\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport {\r\n  registerSuccess,\r\n  registerError,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [logoutSuccess]: () => initialUserState,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [registerError]: (_, { payload }) => payload,\r\n  [loginError]: (_, { payload }) => payload,\r\n  [logoutError]: (_, { payload }) => payload,\r\n  [getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [loginSuccess]: () => true,\r\n  [getCurrentUserSuccess]: () => true,\r\n  [registerError]: () => false,\r\n  [loginError]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n  [logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n  persistStore,\r\n  persistReducer,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n// import logger from 'redux-logger';\r\nimport reducer from './reducer';\r\nimport authReducer from './auth/auth-reducer';\r\n\r\nconst myMiddleware = store => next => action => {\r\n  // console.log('myMiddleware', action);\r\n\r\n  next(action);\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  myMiddleware,\r\n  // logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: reducer,\r\n  },\r\n  middleware: middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","// const getIsAuthenticated = state => Boolean(state.auth.token);\r\nconst getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nexport { getIsAuthenticated, getUserName };\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\nimport './Navigation.css';\r\n\r\nfunction Navigation() {\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n\r\n  return (\r\n    <ul className=\"NavLinks\">\r\n      <li>\r\n        <NavLink\r\n          exact\r\n          to=\"/\"\r\n          className=\"NavLink\"\r\n          activeClassName=\"NavLink--active\"\r\n        >\r\n          Главная\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        {isAuthenticated && (\r\n          <NavLink\r\n            to=\"/contacts\"\r\n            className=\"NavLink\"\r\n            activeClassName=\"NavLink--active\"\r\n          >\r\n            Контакты\r\n          </NavLink>\r\n        )}\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './AuthNav.css';\r\n\r\nconst AuthNav = () => {\r\n  return (\r\n    <ul className=\"AuthLinks\">\r\n      <li>\r\n        <NavLink\r\n          exact\r\n          to=\"/register\"\r\n          className=\"NavLink\"\r\n          activeClassName=\"NavLink--active\"\r\n        >\r\n          Регистрация\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink\r\n          to=\"/login\"\r\n          className=\"NavLink\"\r\n          activeClassName=\"NavLink--active\"\r\n        >\r\n          Логин\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default AuthNav;\r\n","import React, { useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getUserName } from '../../redux/auth/auth-selectors';\r\nimport { logOut } from '../../redux/auth/auth-operations';\r\nimport './UserNav.css';\r\n\r\nfunction UserNav() {\r\n  const name = useSelector(getUserName);\r\n  const dispatch = useDispatch();\r\n\r\n  const onLogout = useCallback(() => dispatch(logOut()), [dispatch]);\r\n\r\n  return (\r\n    <ul className=\"AuthLinks\">\r\n      <li>\r\n        <p className=\"Text\">{name}</p>\r\n      </li>\r\n      <li>\r\n        <button className=\"LogoutBtn\" type=\"button\" onClick={onLogout}>\r\n          Выход\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default UserNav;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Navigation from '../Navigation';\r\nimport AuthNav from '../AuthNav';\r\nimport UserNav from '../UserNav';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\n\r\nimport './AppBar.css';\r\n\r\nfunction AppBar() {\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n\r\n  return (\r\n    <header>\r\n      <Navigation />\r\n\r\n      {isAuthenticated ? <UserNav /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default AppBar;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsAuthenticated } from '../redux/auth/auth-selectors';\r\n\r\nfunction PrivateRoute({ component: Component, redirectTo, ...routeProps }) {\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={props =>\r\n        isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={redirectTo} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsAuthenticated } from '../redux/auth/auth-selectors';\r\n\r\nfunction PublicRoute({ redirectTo, children, ...routeProps }) {\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        children\r\n      )}\r\n    </Route>\r\n  );\r\n}\r\n\r\nexport default PublicRoute;\r\n","import React, { lazy, Suspense, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport AppBar from './components/AppBar';\nimport { getCurrentUser } from './redux/auth/auth-operations';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport './App.css';\n\nconst HomeView = lazy(() =>\n  import('./views/HomeView' /* webpackChunkName: \"HomeView\" */),\n);\n\nconst RegisterView = lazy(() =>\n  import('./views/RegisterView' /* webpackChunkName: \"RegisterView\" */),\n);\n\nconst LoginView = lazy(() =>\n  import('./views/LoginView' /* webpackChunkName: \"LoginView\" */),\n);\n\nconst ContactsView = lazy(() =>\n  import('./views/ContactsView' /* webpackChunkName: \"ContactsView\" */),\n);\nconst NotFoundView = lazy(() =>\n  import('./views/NotFoundView' /* webpackChunkName: \"NotFoundView\" */),\n);\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <>\n      <AppBar />\n\n      <Suspense fallback={<p>Loading...</p>}>\n        <Switch>\n          <PublicRoute exact path=\"/\">\n            <HomeView />\n          </PublicRoute>\n\n          <PublicRoute\n            exact\n            path=\"/register\"\n            restricted\n            redirectTo=\"/contacts\"\n            component={RegisterView}\n          />\n          <PublicRoute\n            exact\n            path=\"/login\"\n            restricted\n            redirectTo=\"/contacts\"\n            component={LoginView}\n          />\n          <PrivateRoute\n            path=\"/contacts\"\n            redirectTo=\"/login\"\n            component={ContactsView}\n          />\n          <Route path=\"*\" component={NotFoundView} />\n        </Switch>\n      </Suspense>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}