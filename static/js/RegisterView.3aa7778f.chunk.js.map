{"version":3,"sources":["views/RegisterView.js"],"names":["RegisterView","state","name","email","password","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","onSubmit","this","className","type","onChange","placeholder","required","autoComplete","Component","mapDispatchToProps","register","connect"],"mappings":"0OAKMA,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,SAAAC,GACb,MAAwBA,EAAMC,OAAtBL,EAAR,EAAQA,KAAMM,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBP,EAAOM,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAMK,iBAEN,EAAKC,MAAMC,SAAS,EAAKZ,OACzB,EAAKQ,SAAS,CAAEP,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,4CAGjD,WACE,MAAkCU,KAAKb,MAA/BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,SAErB,OACE,qCACE,oBAAIW,UAAU,QAAd,iIAEA,uBAAMC,KAAK,SAASH,SAAUC,KAAKJ,aAAcK,UAAU,OAA3D,UACE,wBAAOA,UAAU,QAAjB,+BAEE,uBACEA,UAAU,QACVP,MAAON,EACPe,SAAUH,KAAKT,aACfW,KAAK,OACLd,KAAK,OACLgB,YAAY,SACZC,UAAQ,OAIZ,wBAAOJ,UAAU,QAAjB,2CAEE,uBACEA,UAAU,QACVC,KAAK,QACLd,KAAK,QACLM,MAAOL,EACPc,SAAUH,KAAKT,aACfa,YAAY,gBACZC,UAAQ,OAIZ,wBAAOJ,UAAU,QAAjB,iDAEE,uBACEA,UAAU,QACVC,KAAK,WACLd,KAAK,WACLM,MAAOJ,EACPa,SAAUH,KAAKT,aACfe,aAAa,MACbD,UAAQ,OAIZ,wBAAQH,KAAK,SAASD,UAAU,SAAhC,oI,GAlEiBM,aAgFrBC,EAAqB,CACzBT,SAAUU,KAGGC,sBAAQ,KAAMF,EAAdE,CAAkCxB","file":"static/js/RegisterView.3aa7778f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n// import Button from '@mui/material/Button';\r\nimport { register } from '../redux/auth/auth-operations';\r\n\r\nclass RegisterView extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.setState({ name: '', email: '', password: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, password } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <h1 className=\"Title\">Страница регистрации</h1>\r\n\r\n        <form type=\"submit\" onSubmit={this.handleSubmit} className=\"Form\">\r\n          <label className=\"Label\">\r\n            Имя\r\n            <input\r\n              className=\"Input\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Polina\"\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <label className=\"Label\">\r\n            Почта\r\n            <input\r\n              className=\"Input\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.handleChange}\r\n              placeholder=\"Name@mail.com\"\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <label className=\"Label\">\r\n            Пароль\r\n            <input\r\n              className=\"Input\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={this.handleChange}\r\n              autoComplete=\"off\"\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\" className=\"Button\">\r\n            Зарегистрироваться\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   onSubmit: data => dispatch(register(data)),\r\n// });\r\n\r\n//сокращенный синтаксис\r\nconst mapDispatchToProps = {\r\n  onSubmit: register,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterView);\r\n"],"sourceRoot":""}